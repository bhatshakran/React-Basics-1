{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/React Apps/seasons/src/Components/SeasonsDisplay.js\";\nimport React from 'react';\n\nconst getSeason = (lat, month) => {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat > 0 ? 'winter' : 'summer';\n  }\n};\n\nconst SeasonsDisplay = props => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const text = season === 'winter' ? 'Burr, its chilly' : 'Lets go the beach';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SeasonsDisplay;\nexport default SeasonsDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeasonsDisplay\");","map":{"version":3,"sources":["/Users/user/Desktop/React Apps/seasons/src/Components/SeasonsDisplay.js"],"names":["React","getSeason","lat","month","SeasonsDisplay","props","season","Date","getMonth","text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjC,MAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAC3B,WAAOD,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACA,GAFD,MAEO;AACN,WAAOA,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACA;AACD,CAND;;AAQA,MAAME,cAAc,GAAGC,KAAK,IAAI;AAC/B,QAAMC,MAAM,GAAGL,SAAS,CAACI,KAAK,CAACH,GAAP,EAAY,IAAIK,IAAJ,GAAWC,QAAX,EAAZ,CAAxB;AACA,QAAMC,IAAI,GAAGH,MAAM,KAAK,QAAX,GAAsB,kBAAtB,GAA2C,mBAAxD;AACA,sBAAO;AAAA,cAAMG;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAJD;;KAAML,c;AAMN,eAAeA,cAAf","sourcesContent":["import React from 'react';\n\nconst getSeason = (lat, month) => {\n\tif (month > 2 && month < 9) {\n\t\treturn lat > 0 ? 'summer' : 'winter';\n\t} else {\n\t\treturn lat > 0 ? 'winter' : 'summer';\n\t}\n};\n\nconst SeasonsDisplay = props => {\n\tconst season = getSeason(props.lat, new Date().getMonth());\n\tconst text = season === 'winter' ? 'Burr, its chilly' : 'Lets go the beach';\n\treturn <div>{text}</div>;\n};\n\nexport default SeasonsDisplay;\n"]},"metadata":{},"sourceType":"module"}